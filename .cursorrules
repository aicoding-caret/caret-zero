{
  "project_overview": {
    "name": "Caret (formerly Cline-Alpha)",
    "description": "VSCode extension for AI assistance, focusing on personalized development partnership.",
    "repository_url": "https://github.com/fstory97/cline"
  },
  "architecture": {
    "summary": "Modular: Core TypeScript backend, React webview frontend.",
    "key_components": [
      {
        "name": "Core Extension",
        "path": "src/",
        "entry_point": "src/extension.ts",
        "description": "Backend logic, task execution, state, tools, webview communication."
      },
      {
        "name": "Webview UI",
        "path": "webview-ui/",
        "entry_point": "webview-ui/src/App.tsx",
        "description": "React frontend for user interaction and UI state."
      },
      {
        "name": "State Management",
        "core_provider": "src/core/webview/ClineProvider.ts",
        "webview_context": "webview-ui/src/context/ExtensionStateContext.tsx",
        "description": "Core state in ClineProvider, synced to webview via messages."
      },
      {
        "name": "Task Management",
        "class": "src/core/task/index.ts",
        "description": "Manages task lifecycle, API calls, tools, state persistence."
      },
      {
        "name": "Storage",
        "location": "Internal VSCode Extension Storage",
        "components": ["Task Storage", "Checkpoints (Git)"],
        "description": "Handles persistence of task data and workspace snapshots."
      }
    ],
    "diagram_reference": "caret-docs/architecture/extension-architecture.mmd"
  },
  "development_process": {
    "state_management_guideline": "Core Extension (ClineProvider) is the source of truth. Sync state via messages.",
    "tool_integration": "Follow patterns in src/integrations/, respect .caretignore.",
    "api_providers": "Implementations in src/api/providers/.",
    "testing": "Refer to caret-docs/testing/ for plans.",
    "logging": "Use common logging system (see caret-docs/development/logging-guide.md).",
    "checkpoints": "Managed by src/integrations/checkpoints/CheckpointTracker.ts (Git-based).",
    "documentation": "Update relevant docs in caret-docs/.",
    "contributing": "Refer to CONTRIBUTING.md for guidelines.",
    "work_logs": {
      "location": "caret-docs/work-logs/",
      "daily_log_format": "{date}.md",
      "task_log_format": "tasks/{task-number}-{task-name}.md",
      "purpose": "Maintain context, track progress."
    },
    "git_rules": {
      "commit_format": "[type]: [description]",
      "branching_strategy": "Standard Gitflow/feature branching (TBD)."
    }
  },
  "key_files_reference": [
    ".caretrules",
    "caret-docs/",
    "src/extension.ts",
    "src/core/task/index.ts",
    "src/core/webview/ClineProvider.ts",
    "webview-ui/src/App.tsx",
    "webview-ui/src/context/ExtensionStateContext.tsx",
    "agents-rules/alpha/"
  ]
}
